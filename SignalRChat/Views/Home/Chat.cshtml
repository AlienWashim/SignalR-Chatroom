@{
    ViewBag.Title = "ChatRoom by Washim";
}
<link rel="stylesheet" href="~/Content/Site.css">
<div class="container2">
    <div class="chatTop">
        <h2>ChatRoom</h2>
        <div class="leave-area">
            <input type="button" id="leaveChat" value="Leave Chat" />
        </div>
    </div>
    <div id="chatWindow" class="chat-window">
        <ul id="discussion" class="discussion"></ul>
    </div>
    <div class="input-area">
        <input type="text" id="message" placeholder="Type your message..." />
        <input type="button" id="sendmessage" value="Send" />
        <input type="hidden" id="displayname" />
    </div>

</div>


@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;

            // Function to handle user joining
            function userJoined() {
                $('#leaveChat').show();
            }

            


            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message) {

                // Create a new Date object
                var currentDate = new Date();

                // Get the current date components
                var date = currentDate.getDate();
                var month = currentDate.toLocaleString('en-US', { month: 'long' }); // Get month name
                var year = currentDate.getFullYear();

                // Get the current time components in 12-hour format
                var hours = currentDate.getHours();
                var minutes = currentDate.getMinutes();
                var period = hours >= 12 ? 'PM' : 'AM';
                hours = hours % 12 || 12; // Convert to 12-hour format
                minutes = minutes < 10 ? '0' + minutes : minutes; // Add leading zero if needed

                // Format the date and time as needed
                var formattedDateTime = hours + '.' + minutes + ' ' + period + ', ' + date + ' ' + month + ' ' + year;
                var messageClass;

                if (message === true) {
                    messageClass = 'system-join';
                    $('#discussion').append('<li class="' + messageClass + '" style="margin-bottom:-5px;"> <strong>' + htmlEncode(name)
                        + '</strong> ' + '</li> <p style="text-align: center;margin-top:-5px;">' + formattedDateTime +'</p>');
                } else if (message === false) {
                    messageClass = 'system-leave';
                    $('#discussion').append('<li class="' + messageClass + '" style="margin-bottom:-5px;"> <strong>' + htmlEncode(name)
                        + '</strong> ' + '</li><p style="text-align: center; margin-top:-5px;">' + formattedDateTime + '</p>');
                } else {
                    messageClass = (name === $('#displayname').val()) ? 'sender' : 'receiver';
                    if (messageClass === 'sender') {
                        $('#discussion').append('<li class="' + messageClass + '" title="' + formattedDateTime + '">' + htmlEncode(message) + '</li>');
                    } else {
                        $('#discussion').append(
                            '<div style="position: relative; margin-bottom: 10px; padding-left: 5px;">' +
                            '<strong style="display: block; color: #333; font-weight: bold;">' + htmlEncode(name) + '</strong>' +
                            '<li class="' + messageClass + '" style="list-style-type: none; padding: 5px;  border-radius: 5px; margin-left: 5px;" title="' + formattedDateTime + '">' +
                            htmlEncode(message) +
                            '</li>' +
                            '</div>'
                        );

                    }
                    
                }

                scrollToBottom();
            };


            // Function to prompt the user for their name until they enter a valid one
            function promptForName() {
                var name = '';
                while (!name) {
                    name = prompt('Enter your name (required):', '').trim();
                    if (!name) {
                        alert("Name cannot be empty. Please enter your name.");
                    }
                }
                return name;
            }

            // Prompt the user for their name
            var displayName = promptForName();
            $('#displayname').val(displayName.split(' ')[0]);

            // Start the connection and pass the user's name
            $.connection.hub.qs = { "name": displayName };
            $('#message').val('').focus(); 

            $.connection.hub.start().done(function () {

                userJoined(); 

                // Call the JoinChat method on the server
                chat.server.joinChat(displayName);

                // When clicking the send button
                $('#sendmessage').click(function () {
                    sendMessage();
                });

                // When pressing the Enter key
                $('#message').keydown(function (e) {
                    if (e.key === 'Enter') {
                        e.preventDefault();
                        sendMessage();
                    }
                });
            });

            // Function to send the message
            function sendMessage() {
                chat.server.send($('#displayname').val(), $('#message').val());
                $('#message').val('').focus();
            }

            // When clicking the Leave Chat button
            $('#leaveChat').click(function () {
                $.connection.hub.stop();
                alert('You have left the chat.');
                window.location.href = '/';
            });

            // Function to scroll to the bottom of the chat window
            function scrollToBottom() {
                var chatWindow = $('#chatWindow');
                chatWindow.scrollTop(chatWindow.prop("scrollHeight"));
            }

            // This optional function html-encodes messages for display in the page.
            function htmlEncode(value) {
                return $('<div />').text(value).html();
            }
        });

    </script>


}

<style>
    html, body {
        height: 100%;
        margin: 0;
        min-height: 10vw;
    }


    footer {
        position: fixed;
        bottom: 0;
        left: 0;
        width: 100%;
        background-color: #f8f9fa; 
        text-align: center; 
        padding: 10px; 
        border-top: 1px solid #dee2e6;
    }
    .chatTop {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 10px;
    }



    html, body {
        height: 100%;
        margin: 0;
        background-color: #F0F8F8;
    }



    .chat-window {
        height: 100%;
        max-height: 500px;
        overflow-y: auto;
        margin-bottom: 10px;
        border: 1px solid #ced4da;
        border-radius: 5px;
        padding: 10px;
        background-color: #F0F8F8;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
        box-shadow: inset 2px 2px 2px rgba(0, 0, 0, 0.3);
        margin: 10px;
    }

    .discussion {
        list-style-type: none;
        padding: 0;
        
    }

        .discussion li {
            margin-bottom: 4px;
            padding: 5px;
            background-color: #e9ecef;
            border-radius: 5px;
            width:fit-content;
            max-width: 70%;
        }

            .discussion li.sender {
                background-color: #d1ecf1; 
                margin-left: auto;
            }

            .discussion li.receiver {
                background-color: #e9ecef;
                margin-right: auto;
            }

            .discussion li.system-join {
                background-color: white;
                color: green;
                text-align: center;
                margin: 0 auto;
                margin-bottom: 10px;
            }
            .discussion li.system-leave {
                background-color: white;
                color: red;
                text-align: center;
                margin: 0 auto;
                margin-bottom: 10px;
            }

    .input-area {
        width: 100%;
        display: flex;
        justify-content:center;
        gap: 20px;
        align-items: center;
        padding-top: 10px;
    }

    #message {
        width: 100%;
        padding: 10px;
        border-radius: 5px;
        border: 1px solid #ced4da;
        box-shadow: inset 2px 2px 5px rgba(0, 0, 0, 0.3);
    }

    #sendmessage {
        padding: 12px 24px;
        background-color: #28a745;
        color: #ffffff;
        border: none;
        border-radius: 30px;
        cursor: pointer;
        font-size: 16px;
        transition: all 0.3s ease;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        position: relative;
        overflow: hidden;
        box-shadow: inset 2px 2px 5px rgba(0, 0, 0, 0.3);
    }

        #sendmessage::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 300%;
            height: 300%;
            background: rgba(255, 255, 255, 0.2);
            transform: translate(-50%, -50%) scale(0);
            border-radius: 50%;
            transition: all 0.3s ease;
        }

        #sendmessage:hover {
            background-color: #218838;
            transform: translateY(-2px);
        }

            #sendmessage:hover::before {
                transform: translate(-50%, -50%) scale(1);
            }


    .leave-area {
        text-align: center;
        margin-top: 10px;
    }

    #leaveChat {
        display: none;
        padding: 5px 15px;
        background-color: #ff4d4d;
        color: ghostwhite;
        border: none;
        border-radius: 50px;
        cursor: pointer;
        font-size: 16px;
        letter-spacing: 2px;
        transition: all 0.3s ease-in-out;
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
        position: relative;
        overflow: hidden;
        box-shadow: inset 2px 2px 10px rgba(0, 0, 0, 0.5);
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);
    }

        #leaveChat::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background-color: #ff3333;
            transition: all 0.3s ease-in-out;
            z-index: 0;
        }

        #leaveChat:hover::before {
            left: 0;
        }

        #leaveChat:hover {
            background-color: #ff1a1a;
            transform: scale(1.05);
            box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.2);
        }

        #leaveChat span {
            position: relative;
            z-index: 1;
        }

        #leaveChat:active {
            transform: scale(0.98);
            box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
        }


</style>
